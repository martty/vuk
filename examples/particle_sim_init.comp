#version 450
#pragma shader_stage(compute)

struct Particle {
	float x, y;
	float vx, vy;
};

layout (std430, binding = 1) buffer Particles {
	Particle[] particles;
};

layout (local_size_x = 64) in;

float random (vec2 st) {
    return fract(sin(dot(st.xy,
                         vec2(12.9898,78.233)))*
        43758.5453123);
}

void main() {
	Particle p = particles[gl_GlobalInvocationID.x];
	
	p.x = random(vec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.x)) * 2 - 1;
	p.y = random(vec2(gl_GlobalInvocationID.x % 100, gl_GlobalInvocationID.x % 100)) * 2 - 1;
	//p.x = (gl_GlobalInvocationID.x % 100)/50.0 - 1;
	//p.y = (gl_GlobalInvocationID.x % 100)/50.0 - 1;

	vec2 v = 0.02 * (vec2(0) - vec2(p.x, p.y));
	p.vx = v.y;
	p.vy = -v.x;

	particles[gl_GlobalInvocationID.x] = p;
}